// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Transaction {
  id          String   @id @default(uuid())
  date        DateTime
  amount      Float
  description String
  category    String
  userId      String   @default("user-001")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([category])
  @@index([date])
}

model Note {
  id        String   @id @default(uuid())
  title     String
  content   String
  date      DateTime
  tags      String   // Comma-separated tags
  userId    String   @default("user-001")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([date])
}

model CalendarEvent {
  id        String   @id @default(uuid())
  title     String
  start     DateTime
  end       DateTime
  location  String?
  attendees String   // JSON string array
  userId    String   @default("user-001")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([start])
}

model Task {
  id          String      @id @default(uuid())
  title       String
  description String?
  status      TaskStatus  @default(TODO)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?
  completedAt DateTime?
  tags        String?     // Comma-separated tags
  estimatedMinutes Int?    // Time estimate in minutes
  actualMinutes    Int?    // Actual time spent
  userId      String      @default("user-001")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([userId])
  @@index([status])
  @@index([dueDate])
}

model TimeBlock {
  id          String   @id @default(uuid())
  title       String
  start       DateTime
  end         DateTime
  taskId      String?  // Optional link to a task
  category    String   // e.g., "Deep Work", "Meetings", "Admin"
  description String?
  userId      String   @default("user-001")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([start])
  @@index([category])
}

model ProductivityLog {
  id             String   @id @default(uuid())
  date           DateTime
  tasksCompleted Int      @default(0)
  timeSpent      Int      // Total minutes spent on tasks
  focusRating    Int?     // 1-5 rating of focus quality
  notes          String?  // Reflection notes
  userId         String   @default("user-001")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([userId])
  @@index([date])
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
  CANCELLED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}
